{"version":3,"sources":["storageManager.ts","areas/customerCheckIn/CheckInListComponent.tsx","types.ts","utils/dateUtils.ts","areas/customerCheckIn/SelectionCard.tsx","areas/customerCheckIn/SelectionComponent.tsx","areas/customerCheckIn/CheckInComponent.tsx","areas/manageCheckIn/ManageAuthComponent.tsx","areas/manageCheckIn/barbers/AddBarbersComponent.tsx","areas/manageCheckIn/barbers/ManageBarbersListComponent.tsx","areas/manageCheckIn/barbers/BarbersComponent.tsx","areas/manageCheckIn/reports/ReportsComponent.tsx","areas/manageCheckIn/ManageComponent.tsx","areas/manageCheckIn/check-ins/CheckInEditComponent.tsx","areas/manageCheckIn/check-ins/ManageDailyCheckInListComponent.tsx","areas/manageCheckIn/check-ins/ManageCheckInComponent.tsx","areas/manageCheckIn/reports/ReportListComponent.tsx","areas/manageCheckIn/services/AddServicesComponent.tsx","areas/manageCheckIn/services/ManageServicesListComponent.tsx","areas/manageCheckIn/services/ServicesComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["storageKeys","getItem","key","stringItem","localStorage","JSON","parse","setItem","item","stringify","CheckInListComponent","props","className","scope","checkInInfos","length","map","info","i","customer","service","appointmentType","barber","colSpan","ServiceStatus","View","getTodayDate","generate","weekday","year","month","day","options","date","Intl","DateTimeFormat","format","Date","SelectionCard","selectedClass","selected","onClick","handleChanges","name","SelectionComponent","useState","selection","setSelection","value","currentIndex","index","title","option","CheckInComponent","state","setCheckInState","setCurrentIndex","SERVICES","filter","s","active","price","services","BARBERS","barbers","input","newState","target","categories","finish","trim","finishButtonClass","onChange","type","placeholder","autoFocus","autoComplete","b","firstName","lastName","alias","role","disabled","dailyCheckIns","DAILY_CHECKINS","todayDate","checkin","id","now","status","PENDING","payment","findIndex","d","push","todayCheckIns","setIsCheckingIn","customStyles","content","top","left","right","bottom","marginRight","transform","backGroundColor","ManageAuthComponent","setValue","show","setShow","errorClass","isOpen","onRequestClose","setIsModalOpen","style","e","inputValue","toUpperCase","barberCode","find","code","authorize","Modal","setAppElement","AddBarbersComponent","handleOnChange","alert","color","message","htmlFor","handleSubmit","ManageBarbersListComponent","foundBarber","setBarber","setAlert","handleOnClick","BarbersComponent","getBarbers","setBarbers","updatedBarbers","eachBarber","updateBarber","count","barberAlias","addNewBarber","ReportKey","ManageAction","CheckInEditComponent","optionKey","setOptionKey","newValue","setOptionNewValue","values","setValues","useEffect","checkInInfo","Customer","Service","Status","Barber","Appointment","mapping","COMPLETED","Object","entries","updatedCheckIn","setShouldRefresh","ManageDailyCheckInListComponent","dailyCheckIn","handleManageAction","action","EDIT","DELETE","ManageCheckInComponent","formatValue","num","toString","dateString","getFullYear","getMonth","getDate","checkInDateToFilterBy","setCheckInDateToFilterBy","editing","setEditing","checkInToEdit","setCheckInToEdit","setIsOpen","undefined","parseDate","deleteCheckIn","manageActionPayload","CHECKIN_MANAGE_ACTION","getValuesFromStorage","c","min","max","formattedCheckInDateToFilterBy","replace","t","getDailyCheckInByDate","payload","checkIn","getCheckInToEdit","ReportListComponent","reportData","data","reportItems","total","ReportsComponent","filterBy","reduce","results","each","titleIndx","r","itemIndex","buttonTextMapping","AddServicesComponent","ManageServicesListComponent","foundService","setService","ServicesComponent","getServices","setServices","formatPrice","parseFloat","toFixed","updatedServices","eachService","parsedPrice","updateService","some","toLowerCase","addNewService","ManageComponent","App","isCheckingIn","update","setDailyCheckIns","updateView","view","setView","isModelOpen","VIEW","CHECK_IN","handleViewChange","checkInButtonLabel","checkInButtonIcon","MANAGE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cbe8261.chunk.js","sourcesContent":["export function getItem<T>(key: string): T | null {\r\n  const stringItem = localStorage.getItem(key);\r\n\r\n  if (!stringItem) {\r\n    return null;\r\n  }\r\n\r\n  return JSON.parse(stringItem);\r\n}\r\n\r\nexport function setItem(key: string, item: any) {\r\n  const stringItem: string = JSON.stringify(item);\r\n  localStorage.setItem(key, stringItem);\r\n}\r\n\r\nexport function removeItem(key: string) {\r\n  localStorage.removeItem(key);\r\n}\r\n\r\nexport enum storageKeys {\r\n  DAILY_CHECKINS = '_$dailyCheckIns',\r\n  BARBERS = '_$barbers',\r\n  SERVICES = '_$services',\r\n  VIEW = '_$view',\r\n  CHECKIN_MANAGE_ACTION = '_$checkInManageAction',\r\n}","import React from 'react';\r\nimport { CheckInInfo } from '../../types';\r\n\r\ninterface CheckInListComponentProps {\r\n  checkInInfos: CheckInInfo[];\r\n}\r\nexport function CheckInListComponent(props: CheckInListComponentProps) {\r\n  return <div className=\"container-fluid px-5\">\r\n    <table className=\"table table-borderless mb-5 fade-in\">\r\n      <thead className=\"navi-background-color text-light border-light\">\r\n        <tr className=\"table-font border-bottom \">\r\n          <th scope=\"col\">Customer</th>\r\n          <th scope=\"col\">Service</th>\r\n          <th scope=\"col\">Appointment</th>\r\n          <th scope=\"col\">Barber</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.checkInInfos.length ? props.checkInInfos.map((info, i) => (\r\n          <tr key={i} className=\"table-font border-bottom rounded table-row-color\">\r\n            <td >{info.customer}</td>\r\n            <td>{info.service}</td>\r\n            <td>{info.appointmentType}</td>\r\n            <td>{info.barber}</td>\r\n          </tr>\r\n        )) :\r\n          (<tr className=\"table-font border-bottom rounded table-row-color\">\r\n            <td colSpan={5}>No check-ins are currently available.</td>\r\n          </tr>)}\r\n      </tbody>\r\n    </table>\r\n  </div>;\r\n}\r\n","export interface CheckInInfo {\r\n  id: number;\r\n  customer: string;\r\n  service: string;\r\n  appointmentType: string;\r\n  barber: string;\r\n  payment: number;\r\n  status?: ServiceStatus;\r\n}\r\n\r\nexport enum ServiceStatus {\r\n  COMPLETED = 'Completed',\r\n  PENDING = 'Pending',\r\n}\r\n\r\nexport enum View {\r\n  CHECK_IN = 'checkin',\r\n  MANAGE = 'manage',\r\n}\r\n\r\nexport interface DailyCheckIn {\r\n  id: number;\r\n  date: string;\r\n  checkInInfos: CheckInInfo[]\r\n}\r\n\r\nexport interface Barber {\r\n  firstName: string;\r\n  lastName: string;\r\n  alias?: string;\r\n  code?: string;\r\n}\r\n\r\nexport interface Service {\r\n  id: number,\r\n  name: string;\r\n  price: number | string;\r\n  active: boolean;\r\n}\r\n\r\nexport interface AppAlert {\r\n  show: boolean,\r\n  message: string,\r\n  color?: string;\r\n}","export function getTodayDate() {\r\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' } as Intl.DateTimeFormatOptions;\r\n  return generate(options);\r\n};\r\n\r\nexport function getCurrentTime() {\r\n  const options = { timeStyle: 'short' } as Intl.DateTimeFormatOptions;\r\n  return generate(options);\r\n};\r\n\r\nexport function formatTime(date: Date | null) {\r\n  if (!date) {\r\n    return '';\r\n  }\r\n\r\n  const options = { timeStyle: 'short' } as Intl.DateTimeFormatOptions;\r\n  return generate(options, date);\r\n};\r\n\r\nfunction generate(options: Intl.DateTimeFormatOptions, date?: Date) {\r\n  return new Intl.DateTimeFormat('en-US', options).format(date ?? new Date());\r\n}","import React from 'react';\r\n\r\ninterface SelectionCardProps {\r\n  name: string;\r\n  icon?: string;\r\n  selected: boolean;\r\n  handleChanges: (name: string) => void;\r\n}\r\n\r\nexport function SelectionCard(props: SelectionCardProps) {\r\n  let selectedClass = 'card pointer mb-3 selection-card';\r\n\r\n  if (props.selected) {\r\n    selectedClass = `${selectedClass} finish-button`;\r\n  }\r\n\r\n  return (\r\n    <div className={selectedClass} onClick={() => props.handleChanges(props.name)}>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title fs-5 fw-bold m-0\">{props.name}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { SelectionCard } from './SelectionCard';\r\n\r\ninterface SelectionComponentProps {\r\n  options: string[];\r\n  index: number;\r\n  title: string;\r\n  currentIndex: number;\r\n  handleChanges: (value: string) => void;\r\n}\r\n\r\nexport function SelectionComponent(props: SelectionComponentProps) {\r\n  const [selection, setSelection] = useState(\"\");\r\n\r\n  const handleChanges = (value: string) => {\r\n    setSelection(value);\r\n    props.handleChanges(value);\r\n  };\r\n\r\n  if (props.currentIndex !== props.index) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div className=\"row\">\r\n          <h5 className=\"fs-2 mb-3 p-2 border-bottom border-2\">{props.title}</h5>\r\n        </div>\r\n        <div className=\"row\">\r\n          {props.options.map((option, i) => (\r\n            <div className=\"col-md-3\" key={i}>\r\n              <SelectionCard name={option} selected={selection === option} handleChanges={handleChanges} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { getItem, setItem, storageKeys } from '../../storageManager';\r\nimport { Barber, DailyCheckIn, Service, ServiceStatus } from '../../types';\r\nimport { getTodayDate } from '../../utils/dateUtils';\r\nimport { SelectionComponent } from './SelectionComponent';\r\n\r\ninterface CheckInComponentProps {\r\n  setIsCheckingIn: (isCheckingIn: boolean) => void;\r\n}\r\n\r\nexport function CheckInComponent(props: CheckInComponentProps) {\r\n  const [state, setCheckInState] = useState<string[]>(['']);\r\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n  const [services] = useState<string[]>(() => {\r\n    return getItem<Service[]>(storageKeys.SERVICES)?.filter(s => s.active).map(s => `${s.name} ($${s.price})`) ?? [];\r\n  });\r\n  const [barbers] = useState<Barber[]>(() => {\r\n    return getItem<Barber[]>(storageKeys.BARBERS) ?? [];\r\n  });\r\n\r\n  const handleChanges = (input: any) => {\r\n    const newState = [...state];\r\n\r\n    if (typeof (input) === 'string' && input) {\r\n      newState[currentIndex] = input;\r\n    }\r\n\r\n    if (typeof (input) === 'object') {\r\n      newState[currentIndex] = input.target.value ?? '';\r\n    }\r\n\r\n    setCheckInState(newState);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const dailyCheckIns = getItem<DailyCheckIn[]>(storageKeys.DAILY_CHECKINS) ?? [];\r\n    const todayDate = getTodayDate();\r\n    const [customer, service, appointmentType, barber] = state;\r\n    const checkin = { id: Date.now(), status: ServiceStatus.PENDING, customer: customer.trim(), service, appointmentType, barber, payment: 0 };\r\n\r\n    const index = dailyCheckIns.findIndex(d => d.date === todayDate);\r\n\r\n    if (index > -1) {\r\n      dailyCheckIns[index].checkInInfos.push(checkin);\r\n    } else {\r\n      const todayCheckIns = { id: Date.now(), date: todayDate, checkInInfos: [checkin] };\r\n      dailyCheckIns.push(todayCheckIns)\r\n    }\r\n\r\n    setItem(storageKeys.DAILY_CHECKINS, dailyCheckIns);\r\n    props.setIsCheckingIn(false);\r\n  };\r\n\r\n  const CustomerInput = () => {\r\n    return currentIndex === 0 ? (\r\n      <input\r\n        onChange={handleChanges}\r\n        value={state[0]}\r\n        className=\"check-in-input fs-2 text-center w-100 fade-in\"\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Enter preferred name\"\r\n        autoFocus={true}\r\n        autoComplete=\"off\"\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  const categories = ['Name', 'Service', 'Appointment', 'Barber'];\r\n  const appointmentTypes = ['Walk-in', 'Booksy', 'Phone', 'Other'];\r\n  const finish = state.filter(value => value?.trim()).length === 4;\r\n  let finishButtonClass = \"mt-2 btn btn-lg fs-1 fw-bold w-50 mx-auto\";\r\n\r\n  if (finish) {\r\n    finishButtonClass = `${finishButtonClass} finish-button`\r\n  } else {\r\n    finishButtonClass = `${finishButtonClass} selection-button`\r\n  }\r\n\r\n  if (services.length === 0 || barbers.length === 0) {\r\n    return (<div className=\"container fade-in\">\r\n      <div className=\"card border-0 mx-auto my-5 text-center\">\r\n        <div className=\"card-body mb-3 px-0\">\r\n          <h1 className=\"card-title fs-3 bg-danger p-3 text-light\">You have not added your services and barbers yet. Go to the Manage page and add them.</h1>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container fade-in\">\r\n      <div className=\"card border-0 mx-auto my-5 text-center\">\r\n        <div className=\"card-body mb-3 px-0\">\r\n          <div className=\"mb-3\">\r\n            {state.filter(item => item).map((item, i) => <span key={i} className=\"badge rounded-pill fs-5 m-1 navi-background-color\">{`${categories[i]}: ${item}`}</span>)}\r\n          </div>\r\n          {CustomerInput()}\r\n          <SelectionComponent index={1} options={services} title=\"What service are you getting?\" currentIndex={currentIndex} handleChanges={handleChanges} />\r\n          <SelectionComponent index={2} options={appointmentTypes} title=\"Select the appointment.\" currentIndex={currentIndex} handleChanges={handleChanges} />\r\n          <SelectionComponent index={3} options={barbers.map(b => `${b.firstName} ${b.lastName} (${b.alias})`)} title=\"Who's your hero barber?\" currentIndex={currentIndex} handleChanges={handleChanges} />\r\n        </div>\r\n        <div className=\"btn-group w-50 mx-auto\" role=\"group\" aria-label=\"Basic outlined example\">\r\n          <button type=\"button\" disabled={currentIndex < 1} onClick={() => setCurrentIndex(currentIndex - 1)} className=\"selection-button btn btn-lg fs-1 fw-bold\"><i className=\"fa-solid fa-circle-left\"></i> Back</button>\r\n          <button type=\"button\" disabled={currentIndex > 2} onClick={() => setCurrentIndex(currentIndex + 1)} className=\"selection-button btn btn-lg fs-1 fw-bold\">Next <i className=\"fa-solid fa-circle-right\"></i></button>\r\n        </div>\r\n        <button type=\"button\" disabled={!finish} onClick={handleSubmit} className={finishButtonClass}>Finish <i className=\"fa-solid fa-circle-plus\"></i></button>\r\n      </div>\r\n    </div>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { getItem, storageKeys } from '../../storageManager';\r\nimport { AppAlert, Barber } from '../../types';\r\nimport Modal from 'react-modal';\r\n\r\ninterface ManageAuthComponentProps {\r\n  isOpen: boolean;\r\n  setIsModalOpen: (flag: boolean) => void;\r\n  authorize: () => void;\r\n}\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backGroundColor: 'red',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport function ManageAuthComponent(props: ManageAuthComponentProps) {\r\n  const [barbers] = useState(getItem<Barber[]>(storageKeys.BARBERS) ?? []);\r\n  const [value, setValue] = useState('');\r\n  const [show, setShow] = useState<boolean>(false);\r\n\r\n  const authenticate = (e: any) => {\r\n    const inputValue = e.target.value?.trim().toUpperCase() ?? '';\r\n    const barberCode = barbers.find((b: any) => b.code === inputValue)?.code;\r\n    setValue(inputValue);\r\n\r\n    if (barberCode) {\r\n      setValue('');\r\n      setShow(false);\r\n      props.authorize();\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  const errorClass = show ? \"text-danger fw-bold\" : \"text-danger fw-bold invisible\"\r\n\r\n  return <div className=\"modal fade\" id=\"authenticateMode\">\r\n    <div className=\"modal-dialog\">\r\n      <Modal\r\n        isOpen={props.isOpen}\r\n        onRequestClose={() => props.setIsModalOpen(false)}\r\n        style={customStyles}\r\n      >\r\n\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\"><i className=\"fa-solid fa-circle-info\"></i> Barber code is required to perform this action.</h5>\r\n          <button type=\"button\" onClick={() => props.setIsModalOpen(false)} className=\"btn-close\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <input\r\n            onChange={authenticate}\r\n            value={value}\r\n            className=\"check-in-input fs-3 text-center w-100 header-border-bottom\"\r\n            type=\"password\"\r\n            name=\"search\"\r\n            placeholder=\"Enter Code\"\r\n            autoFocus={true}\r\n            autoComplete=\"off\" />\r\n          <span className={errorClass}><i className=\"fa-solid fa-triangle-exclamation\"></i>Barber code is not valid!</span>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => props.setIsModalOpen(false)}>{<i className=\"fa-solid fa-x\"></i>} Close</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  </div>;\r\n}\r\n","import React from 'react';\r\nimport { AppAlert, Barber } from '../../../types';\r\n\r\ninterface AddBarbersComponentProps {\r\n  setBarbers: (barbers: Barber[]) => void;\r\n  barber: Barber;\r\n  alert: AppAlert;\r\n  handleOnChange: (barber: Barber) => void;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nexport function AddBarbersComponent(props: AddBarbersComponentProps) {\r\n  const handleOnChange = (e: any) => props.handleOnChange({ ...props.barber, [e.target.name]: e.target.value });\r\n  const handleClear = () => props.handleOnChange({ firstName: '', lastName: '' });\r\n  const handleSubmit = () => props.handleSubmit();\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div>\r\n          <div className=\"mb-3 text-center\">\r\n            {props.alert.show && <div id=\"barberHelp\" className={`${props.alert.color} \"form-text fw-bold fs-4\"`}><i className=\"fa-solid fa-circle-info\"></i> {props.alert.message}</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6 mx-auto\">\r\n        <div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"barberFirstName\" className=\"form-label fw-bold\">First Name</label>\r\n            <input onChange={handleOnChange} name=\"firstName\" type=\"text\" className=\"form-control\" id=\"barberFirstName\" aria-describedby=\"barberfnHelp\" value={props.barber.firstName} placeholder=\"Enter first name\" />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"barberLastName\" className=\"form-label fw-bold\">Last Name</label>\r\n            <input onChange={handleOnChange} name=\"lastName\" type=\"text\" className=\"form-control\" id=\"barberLastName\" aria-describedby=\"barberlnHelp\" value={props.barber.lastName} placeholder=\"Enter last name\" />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <h5 className=\"fs-5\">{props.barber.alias ? `Alias: ${props.barber.alias}` : ''}</h5>\r\n          </div>\r\n          <div className=\"mb-1\">\r\n            <button onClick={() => handleClear()} type=\"button\" className=\"btn btn-secondary btn-small fw-bold\"><i className=\"fa-solid fa-xmark\"></i> Clear fields</button>\r\n          </div>\r\n          <button onClick={handleSubmit} type=\"submit\" className=\"btn selection-button w-100 fs-5 fw-bold\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n}\r\n","import React from 'react';\r\nimport { getItem, storageKeys } from '../../../storageManager';\r\nimport { AppAlert, Barber } from '../../../types';\r\n\r\ninterface ManageBarbersListComponentProps {\r\n  barbers: Barber[];\r\n  setBarber: (barber: Barber) => void;\r\n  setAlert: (alert: AppAlert) => void;\r\n}\r\n\r\nexport function ManageBarbersListComponent(props: ManageBarbersListComponentProps) {\r\n  const handleOnClick = (alias: string) => {\r\n    const barbers = getItem<Barber[]>(storageKeys.BARBERS) ?? [];\r\n    const foundBarber = barbers.find(s => s.alias === alias);\r\n    props.setBarber(foundBarber as Barber);\r\n    props.setAlert({ show: false, message: '' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {props.barbers.length > 0 ? props.barbers.map((barber, i) => (\r\n        <div className=\"col-md-3\" key={barber.alias}>\r\n          <div className=\"card m-1\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title mx-1\">{barber.firstName} {barber.lastName}</h5>\r\n              <h6 className=\"card-subtitle mb-2 mx-1 text-muted\">Alias: {barber.alias}</h6>\r\n              <button onClick={() => handleOnClick(barber.alias as string)} type=\"button\" className=\"btn btn-sm navi-background-color mx-1 w-100\">Update</button>\r\n            </div>\r\n          </div>\r\n        </div>)) : <div className=\"fs-5\">No barber has been added. Click the Add Barber to add new barber information.</div>\r\n      }\r\n    </div>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { getItem, setItem, storageKeys } from '../../../storageManager';\r\nimport { AppAlert, Barber } from '../../../types';\r\nimport { AddBarbersComponent } from './AddBarbersComponent';\r\nimport { ManageBarbersListComponent } from './ManageBarbersListComponent';\r\n\r\nexport function BarbersComponent() {\r\n  const [barbers, setBarbers] = useState(() => getBarbers());\r\n  const [barber, setBarber] = useState<Barber>({ firstName: '', lastName: '' });\r\n  const defaultAlert = { show: false, message: '', color: '' };\r\n  const [alert, setAlert] = useState<AppAlert>(defaultAlert);\r\n\r\n  const addNewBarber = () => {\r\n    const barbers = getItem<Barber[]>(storageKeys.BARBERS) ?? [];\r\n    const { firstName, lastName } = barber;\r\n\r\n    const count = barbers.length + 1;\r\n    const barberAlias = `HERO-${count}`;\r\n    const barberCode = `HERO${count}`;\r\n    const updatedBarbers = [{ firstName, lastName, alias: barberAlias, code: barberCode }, ...barbers];\r\n\r\n    setItem(storageKeys.BARBERS, updatedBarbers);\r\n    setAlert({ show: true, message: `${firstName} ${lastName} has been successfully added with alias ${barberAlias}.`, color: 'text-success' });\r\n    setBarber({ firstName: '', lastName: '' });\r\n    setBarbers(getBarbers());\r\n  }\r\n\r\n  const updateBarber = () => {\r\n    const barbers = getItem<Barber[]>(storageKeys.BARBERS) ?? [];\r\n    const { firstName, lastName, alias } = barber;\r\n\r\n    const updatedBarbers = barbers.map(eachBarber => {\r\n      if (eachBarber.alias === alias) {\r\n        return { ...eachBarber, firstName, lastName };\r\n      }\r\n      return eachBarber;\r\n    });\r\n\r\n    setItem(storageKeys.BARBERS, updatedBarbers);\r\n    setAlert({ show: true, message: `Barber with name: ${firstName} ${lastName} (${barber.alias}) has been successfully updated.`, color: 'text-success' });\r\n    setBarber({ firstName: '', lastName: '' });\r\n    setBarbers(updatedBarbers);\r\n  }\r\n\r\n  const handleOnChange = (barber: Barber) => {\r\n    setBarber(barber);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const { firstName, lastName } = barber;\r\n\r\n    if (!firstName || !lastName) {\r\n      return setAlert({ show: true, message: `First name and last name are required for barbers.`, color: 'text-danger' });;\r\n    }\r\n\r\n    if (barber.alias) {\r\n      return updateBarber();\r\n    }\r\n\r\n    addNewBarber();\r\n  }\r\n\r\n  function getBarbers() {\r\n    return getItem<Barber[]>(storageKeys.BARBERS) ?? [];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button className=\"btn navi-background-color\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#AddBarbersComponent\" aria-expanded=\"false\" aria-controls=\"AddBarbersComponent\">\r\n        <i className=\"fa-solid fa-user-plus\"></i> Add Barber\r\n      </button>\r\n      <div className=\"collapse\" id=\"AddBarbersComponent\">\r\n        <div className=\"card card-body\">\r\n          <AddBarbersComponent\r\n            setBarbers={setBarbers}\r\n            handleOnChange={handleOnChange}\r\n            handleSubmit={handleSubmit}\r\n            alert={alert}\r\n            barber={barber}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"fs-4 navi-background-color p-2 my-2\"><i className=\"fa-solid fa-user\"></i>  Barbers</div>\r\n      <ManageBarbersListComponent\r\n        barbers={barbers}\r\n        setBarber={setBarber}\r\n        setAlert={setAlert}\r\n      />\r\n    </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { getItem, storageKeys } from '../../../storageManager';\r\nimport { CheckInInfo, DailyCheckIn, ServiceStatus } from '../../../types';\r\nimport { ReportData, ReportListComponent } from './ReportListComponent';\r\n\r\nenum ReportKey {\r\n  barber = 'barber',\r\n  appointmentType = 'appointmentType',\r\n  service = 'service'\r\n};\r\n\r\nexport function ReportsComponent() {\r\n  const [selection, setSelection] = useState<ReportKey | string>(\"Select Report View\");\r\n\r\n  const filterBy = (title: ReportKey, item: ReportKey) => {\r\n    const dailyCheckIns = getItem<DailyCheckIn[]>(storageKeys.DAILY_CHECKINS) ?? [];\r\n    const checkInInfos = dailyCheckIns\r\n      .reduce((results: CheckInInfo[], each: DailyCheckIn) => ([...results, ...each.checkInInfos]), [])\r\n      .filter(c => c.status === ServiceStatus.COMPLETED);\r\n    return checkInInfos.reduce((results: ReportData[], checkin: CheckInInfo) => {\r\n      const titleIndx = results.findIndex(r => r.title === checkin[title]);\r\n\r\n      if (titleIndx > -1) {\r\n        const itemIndex = results[titleIndx].reportItems.findIndex(i => i.item === checkin[item]);\r\n        if (itemIndex > -1) {\r\n          results[titleIndx].reportItems[itemIndex].total++;\r\n        } else {\r\n          results[titleIndx].reportItems.push({\r\n            item: checkin[item],\r\n            total: 1\r\n          })\r\n        }\r\n      } else {\r\n        results.push({\r\n          title: checkin[title],\r\n          reportItems: [{\r\n            item: checkin[item],\r\n            total: 1\r\n          }]\r\n        })\r\n      }\r\n\r\n      return results;\r\n    }, []);\r\n  }\r\n\r\n  const buttonTextMapping = {\r\n    [ReportKey.barber]: 'By Barbers',\r\n    [ReportKey.service]: 'By Services',\r\n    [ReportKey.appointmentType]: 'By Appointment'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <button className=\"btn navi-background-color dropdown-toggle w-25 mb-2 fs-3\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          {buttonTextMapping[selection as ReportKey] ?? selection}\r\n        </button>\r\n        <ul className=\"dropdown-menu w-25\" aria-labelledby=\"dropdownMenuButton1\">\r\n          <li><span onClick={() => setSelection(ReportKey.barber)} className=\"dropdown-item fw-bold\"><i className=\"fa-solid fa-user\"></i> Barbers</span></li>\r\n          <li><span onClick={() => setSelection(ReportKey.service)} className=\"dropdown-item fw-bold\"><i className=\"fa-solid fa-scissors\"></i> Services</span></li>\r\n          <li><span onClick={() => setSelection(ReportKey.appointmentType)} className=\"dropdown-item fw-bold\">Appointment</span></li>\r\n        </ul>\r\n      </div>\r\n      <>\r\n        {selection === ReportKey.barber && <div >\r\n          <div className=\"fs-4 navi-background-color p-2 mb-2\"><i className=\"fa-solid fa-scissors\"></i> Services</div>\r\n          <ReportListComponent reportData={filterBy(ReportKey.barber, ReportKey.service)} />\r\n          <div className=\"fs-4 navi-background-color p-2 my-2\">Appointment Types</div>\r\n          <ReportListComponent reportData={filterBy(ReportKey.barber, ReportKey.appointmentType)} />\r\n        </div>}\r\n        {selection === ReportKey.service && <div >\r\n          <div className=\"fs-4 navi-background-color p-2 mb-2\"><i className=\"fa-solid fa-user\"></i> Barbers</div>\r\n          <ReportListComponent reportData={filterBy(ReportKey.service, ReportKey.barber)} />\r\n          <div className=\"fs-4 navi-background-color p-2 my-2\">Appointment Types</div>\r\n          <ReportListComponent reportData={filterBy(ReportKey.service, ReportKey.appointmentType)} />\r\n        </div>}\r\n        {selection === ReportKey.appointmentType && <div >\r\n          <div className=\"fs-4 navi-background-color p-2 mb-2\">Barbers</div>\r\n          <ReportListComponent reportData={filterBy(ReportKey.appointmentType, ReportKey.barber)} />\r\n          <div className=\"fs-4 navi-background-color p-2 my-2\">Services</div>\r\n          <ReportListComponent reportData={filterBy(ReportKey.appointmentType, ReportKey.service)} />\r\n        </div>}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { BarbersComponent } from './barbers/BarbersComponent';\r\nimport { ManageCheckInComponent } from './check-ins/ManageCheckInComponent';\r\nimport { ReportsComponent } from './reports/ReportsComponent';\r\nimport { ServicesComponent } from './services/ServicesComponent';\r\n\r\n\r\nexport enum ManageAction {\r\n  EDIT = 'edit',\r\n  DELETE = 'delete',\r\n}\r\n\r\nexport interface ManageActionPayload {\r\n  action: ManageAction;\r\n  id: number;\r\n}\r\n\r\nexport function ManageComponent(props: any) {\r\n  return (\r\n    <div className=\"container\">\r\n      <ul className=\"nav nav-tabs shadow my-5\" id=\"myTab\" role=\"tablist\">\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button className=\"manage-tab nav-link fw-bold fs-5 active\" id=\"manageCheckIn-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#manageCheckIn\" type=\"button\" role=\"tab\" aria-controls=\"manageCheckIn\" aria-selected=\"true\"><i className=\"fa-solid fa-calendar-check\"></i> Manage Check-in</button>\r\n        </li>\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button className=\"manage-tab nav-link fw-bold fs-5\" id=\"services-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#services\" type=\"button\" role=\"tab\" aria-controls=\"services\" aria-selected=\"false\"><i className=\"fa-solid fa-scissors\"></i> Services</button>\r\n        </li>\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button className=\"manage-tab nav-link fw-bold fs-5\" id=\"barbers-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#barbers\" type=\"button\" role=\"tab\" aria-controls=\"barbers\" aria-selected=\"false\"><i className=\"fa-solid fa-user-plus\"></i> Barbers</button>\r\n        </li>\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button className=\"manage-tab nav-link fw-bold fs-5\" id=\"reports-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#reports\" type=\"button\" role=\"tab\" aria-controls=\"reports\" aria-selected=\"false\"><i className=\"fa-regular fa-calendar-lines\"></i> Reports</button>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"myTabContent\">\r\n        <div className=\"tab-pane fade show active\" id=\"manageCheckIn\" role=\"tabpanel\" aria-labelledby=\"manageCheckIn-tab\">\r\n          <ManageCheckInComponent />\r\n        </div>\r\n        <div className=\"tab-pane fade\" id=\"services\" role=\"tabpanel\" aria-labelledby=\"services-tab\">\r\n          <ServicesComponent />\r\n        </div>\r\n        <div className=\"tab-pane fade\" id=\"barbers\" role=\"tabpanel\" aria-labelledby=\"barbers-tab\">\r\n          <BarbersComponent />\r\n        </div>\r\n        <div className=\"tab-pane fade\" id=\"reports\" role=\"tabpanel\" aria-labelledby=\"reports-tab\">\r\n          <ReportsComponent />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getItem, setItem, storageKeys } from '../../../storageManager';\r\nimport { Barber, CheckInInfo, DailyCheckIn, Service, ServiceStatus } from '../../../types';\r\n\r\ninterface CheckInEditComponentProps {\r\n  checkInInfo: CheckInInfo | undefined;\r\n  setShouldRefresh: (event: any) => void;\r\n}\r\n\r\nexport function CheckInEditComponent(props: CheckInEditComponentProps) {\r\n  const [optionKey, setOptionKey] = useState<string>();\r\n  const [newValue, setOptionNewValue] = useState<string>();\r\n  const [values, setValues] = useState<{ [key: string]: any; }>();\r\n  const [barbers] = useState<Barber[]>(() => {\r\n    return getItem<Barber[]>(storageKeys.BARBERS) ?? [];\r\n  });\r\n  const [services] = useState<string[]>(() => {\r\n    return getItem<Service[]>(storageKeys.SERVICES)?.filter(s => s.active).map(s => `${s.name} ($${s.price})`) ?? [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.checkInInfo) {\r\n      const { customer, service, status, barber, appointmentType } = props.checkInInfo ?? {} as CheckInInfo;\r\n      setValues({\r\n        Customer: customer,\r\n        Service: service,\r\n        Status: status,\r\n        Barber: barber,\r\n        Appointment: appointmentType\r\n      });\r\n    }\r\n  }, [props.checkInInfo]);\r\n\r\n  useEffect(() => {\r\n    if (values && optionKey && newValue) {\r\n      setValues({ ...values, ...{ [`${optionKey}`]: newValue } });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [newValue]);\r\n\r\n  const mapping: { [key: string]: any; } = {\r\n    Service: services,\r\n    Appointment: ['Walk-in', 'Booksy', 'Phone', 'Other'],\r\n    Status: [ServiceStatus.COMPLETED, ServiceStatus.PENDING],\r\n    Barber: barbers.map(b => `${b.firstName} ${b.lastName} (${b.alias})`)\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    const updatedCheckIn = {\r\n      ...props.checkInInfo,\r\n      service: values?.Service,\r\n      status: values?.Status,\r\n      barber: values?.Barber,\r\n      appointmentType: values?.Appointment\r\n    } as CheckInInfo;\r\n\r\n    const dailyCheckIns = getItem<DailyCheckIn[]>(storageKeys.DAILY_CHECKINS) ?? [];\r\n\r\n    for (const item of dailyCheckIns) {\r\n      item.checkInInfos = item.checkInInfos.map(checkin => {\r\n        if (checkin.id === updatedCheckIn.id) {\r\n          return updatedCheckIn;\r\n        }\r\n        return checkin;\r\n      });\r\n    }\r\n\r\n    setItem(storageKeys.DAILY_CHECKINS, dailyCheckIns);\r\n    props.setShouldRefresh(Date.now());\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 fade-in\">\r\n      <h1 className=\"fs-5\">Click on the category to show options.</h1>\r\n      <div className=\"mb-3\">\r\n        {Object\r\n          .entries(values ?? {} as { [key: string]: any; })\r\n          .filter(([key]) => key)\r\n          .map(([key, value]) => <button onClick={() => setOptionKey(key)} type=\"button\" key={key} className=\"m-1 badge rounded-pill fs-5 navi-background-color\">{`${key}: ${value}`}</button>)}\r\n      </div>\r\n      {optionKey && <div className=\"mb-3 fade-in\">\r\n        <h5 className=\"fs-5\">Click to select new options</h5>\r\n        {mapping[optionKey as string]?.map((value: string, i: number) => <button type=\"button\" disabled={value === newValue} onClick={() => value !== newValue && setOptionNewValue(value)} key={i} className=\"btn btn-sm navi-background-color mx-1\">{value}</button>)}\r\n      </div>}\r\n      <div className=\"mb-3\">\r\n        {newValue && <button type=\"button\" onClick={handleSaveChanges} className=\"btn btn-sm selection-button fs-5 fade-in\">Save Changes</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { DailyCheckIn } from '../../../types';\r\nimport { ManageActionPayload, ManageAction } from '../ManageComponent';\r\n\r\ninterface ManageDailyCheckInListComponentProps {\r\n  dailyCheckIn: DailyCheckIn;\r\n  handleManageAction: (action: ManageActionPayload) => void;\r\n}\r\n\r\nexport function ManageDailyCheckInListComponent(props: ManageDailyCheckInListComponentProps) {\r\n  const checkInInfos = props.dailyCheckIn?.checkInInfos ?? [];\r\n\r\n  return <div >\r\n    <table className=\"table table-borderless mb-5 fade-in\">\r\n      <thead className=\"navi-background-color text-light border-light\">\r\n        <tr className=\"fs-5 border-bottom \">\r\n          <th scope=\"col\">Customer</th>\r\n          <th scope=\"col\">Service</th>\r\n          <th scope=\"col\">Appointment</th>\r\n          <th scope=\"col\">Barber</th>\r\n          <th scope=\"col\">Service Status</th>\r\n          <th scope=\"col\">Edit</th>\r\n          <th scope=\"col\">Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {checkInInfos.length ? checkInInfos.map((info, i) => (\r\n          <tr key={i} className=\"fw-bold border-bottom rounded table-row-color\">\r\n            <td >{info.customer}</td>\r\n            <td>{info.service}</td>\r\n            <td>{info.appointmentType}</td>\r\n            <td>{info.barber}</td>\r\n            <td>{info.status}</td>\r\n            <td onClick={() => props.handleManageAction({ id: info.id, action: ManageAction.EDIT })} title=\"Click to display edit view.\" className=\"fs-4 py-0 pointer\"><i className=\"fa-solid fa-pen-to-square text-warning text-center\"></i></td>\r\n            <td onClick={() => props.handleManageAction({ id: info.id, action: ManageAction.DELETE })} title=\"Click to delete.\" className=\"fs-4 py-0 pointer\"><i className=\"fa-solid fa-trash-can text-danger text-center\"></i></td>\r\n          </tr>\r\n        )) :\r\n          <tr className=\"fw-bold border-bottom rounded table-row-color\">\r\n            <td colSpan={8} >No check-in found for the selected date.</td>\r\n          </tr>}\r\n      </tbody>\r\n    </table>\r\n  </div>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getItem, setItem, storageKeys } from '../../../storageManager';\r\nimport { CheckInInfo, DailyCheckIn } from '../../../types';\r\nimport { CheckInEditComponent } from './CheckInEditComponent';\r\nimport { ManageDailyCheckInListComponent } from './ManageDailyCheckInListComponent';\r\nimport { ManageActionPayload, ManageAction } from '../ManageComponent';\r\nimport { ManageAuthComponent } from '../ManageAuthComponent';\r\n\r\nexport function ManageCheckInComponent(props: any) {\r\n  const formatValue = (num: number) => num.toString().length < 2 ? '0' + num : num;\r\n  const d = new Date();\r\n  const dateString = `${d.getFullYear()}-${formatValue(d.getMonth() + 1)}-${formatValue(d.getDate())}`;\r\n  const [checkInDateToFilterBy, setCheckInDateToFilterBy] = useState<string>(dateString);\r\n  const [editing, setEditing] = useState<boolean>(false);\r\n  const [, setShouldRefresh] = useState<any>();\r\n  const [checkInToEdit, setCheckInToEdit] = useState<CheckInInfo | undefined>();\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  const getCheckInToEdit = () => {\r\n    const dailyCheckIns = getItem<DailyCheckIn[]>(storageKeys.DAILY_CHECKINS) ?? [];\r\n    const manageActionPayload = getItem<ManageActionPayload>(storageKeys.CHECKIN_MANAGE_ACTION);\r\n\r\n    for (const item of dailyCheckIns) {\r\n      const checkIn = item.checkInInfos.find(c => c.id === manageActionPayload?.id);\r\n      if (checkIn) {\r\n        return checkIn;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCheckInToEdit(undefined);\r\n  }, [checkInDateToFilterBy]);\r\n\r\n  useEffect(() => {\r\n    if (!checkInToEdit) {\r\n      setEditing(false);\r\n    }\r\n  }, [checkInToEdit]);\r\n\r\n\r\n  const getValuesFromStorage = () => {\r\n    const dailyCheckIns = getItem<DailyCheckIn[]>(storageKeys.DAILY_CHECKINS) ?? [];\r\n    const manageActionPayload = getItem<ManageActionPayload>(storageKeys.CHECKIN_MANAGE_ACTION);\r\n    return { dailyCheckIns, manageActionPayload };\r\n  };\r\n\r\n  const parseDate = (dateString: string) => Date\r\n    .parse(Intl.DateTimeFormat('en-US')\r\n      .format(new Date(dateString)));\r\n\r\n  const getDailyCheckInByDate = () => {\r\n    const formattedCheckInDateToFilterBy = checkInDateToFilterBy.replace('-', '/');\r\n    const checkIns = getItem<DailyCheckIn[]>(storageKeys.DAILY_CHECKINS) ?? [];\r\n    const foundDailyCheckIn = checkIns.find((t: DailyCheckIn) => parseDate(t.date) === parseDate(formattedCheckInDateToFilterBy)) as DailyCheckIn;\r\n    return foundDailyCheckIn;\r\n  };\r\n\r\n  const deleteCheckIn = () => {\r\n    const { dailyCheckIns, manageActionPayload } = getValuesFromStorage();\r\n\r\n    for (const item of dailyCheckIns) {\r\n      item.checkInInfos = item.checkInInfos.filter(c => c.id !== manageActionPayload?.id);\r\n    }\r\n\r\n    setItem(storageKeys.DAILY_CHECKINS, dailyCheckIns);\r\n  };\r\n\r\n  const authorize = () => {\r\n    deleteCheckIn();\r\n    setIsOpen(false);\r\n    setShouldRefresh(new Date());\r\n  }\r\n\r\n  const handleManageAction = (payload: ManageActionPayload) => {\r\n    setItem(storageKeys.CHECKIN_MANAGE_ACTION, payload);\r\n\r\n    if (payload.action === ManageAction.EDIT) {\r\n      setEditing(true);\r\n      setCheckInToEdit(getCheckInToEdit());\r\n    }\r\n    if (payload.action === ManageAction.DELETE) {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"my-2\">\r\n        <div className=\"fs-4 fw-bold\">\r\n          Select Check-in Date\r\n        </div>\r\n        <div className=\"text-left\">\r\n          <input onChange={(e: any) => setCheckInDateToFilterBy(e.target.value)} className=\"m-2 fs-3 fw-bold border-1\" type=\"date\" id=\"start\" name=\"start-date\" value={checkInDateToFilterBy} min=\"2021-01-01\" max=\"2050-01-01\" />\r\n        </div>\r\n      </div>\r\n      {editing && <CheckInEditComponent checkInInfo={checkInToEdit} setShouldRefresh={setShouldRefresh} />}\r\n      <div className=\"mt-4\">\r\n        <div>\r\n          <ManageDailyCheckInListComponent dailyCheckIn={getDailyCheckInByDate()} handleManageAction={handleManageAction} />\r\n        </div>\r\n      </div>\r\n      <ManageAuthComponent isOpen={isOpen} setIsModalOpen={setIsOpen} authorize={authorize} />\r\n    </div>);\r\n}\r\n","import React from 'react';\r\n\r\nexport interface ReportItem {\r\n  item: string;\r\n  total: number;\r\n}\r\n\r\nexport interface ReportData {\r\n  title: string;\r\n  reportItems: ReportItem[];\r\n}\r\n\r\ninterface ReportListComponentProps {\r\n  reportData: ReportData[];\r\n}\r\n\r\nexport function ReportListComponent(props: ReportListComponentProps) {\r\n  return (\r\n    <div className=\"row fade-in px-3\">\r\n      {props.reportData.map((data, i) => (\r\n        <div className=\"border\" key={i}>\r\n          <h5 className=\"fs-6 border-bottom my-2\">{data.title}</h5>\r\n          <table className=\"table table-borderless\">\r\n            <thead className=\"bg-secondary\">\r\n              <tr>\r\n                <th className=\"py-0\" scope=\"col\">Report Item</th>\r\n                <th className=\"py-0\" scope=\"col\">Count</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.reportItems.map(({ item, total }, i) => (\r\n                <tr key={i} className=\"border-bottom rounded table-row-color\">\r\n                  <td className=\"py-0\">{item}</td>\r\n                  <td className=\"py-0 col-2 text-right\">{total}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { AppAlert, Service } from '../../../types';\r\n\r\ninterface AddServicesComponentProps {\r\n  setServices: (services: Service[]) => void;\r\n  service: Service;\r\n  alert: AppAlert;\r\n  handleOnChange: (service: Service) => void;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nexport function AddServicesComponent(props: AddServicesComponentProps) {\r\n  const handleOnChange = (e: any) => props.handleOnChange({ ...props.service, [e.target.name]: e.target.value });\r\n  const handleClear = () => props.handleOnChange({ id: 0, name: '', price: 0, active: false });\r\n  const handleStatusChange = (status: boolean) => props.handleOnChange({ ...props.service, active: status });\r\n  const handleSubmit = () => props.handleSubmit();\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div>\r\n          <div className=\"mb-3 text-center\">\r\n            {props.alert.show && <div id=\"serviceHelp\" className={`${props.alert.color} \"form-text fw-bold fs-4\"`}><i className=\"fa-solid fa-triangle-exclamation\"></i> {props.alert.message}</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6 mx-auto\">\r\n        <div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"service\" className=\"form-label fw-bold\">Service Name</label>\r\n            <input onChange={handleOnChange} name=\"name\" type=\"text\" className=\"form-control\" id=\"service\" aria-describedby=\"serviceHelp\" value={props.service.name} placeholder=\"Enter service name\" />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"price\" className=\"form-label fw-bold\">Price</label>\r\n            <input onChange={handleOnChange} name=\"price\" type=\"number\" className=\"form-control\" id=\"price\" value={props.service.price} />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <h5 className=\"fs-6 fw-bold\">Status: {props.service.active ? 'Active' : 'Not Active'}</h5>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <button onClick={() => handleStatusChange(!props.service.active)} type=\"button\" className=\"btn btn-warning\">{props.service.active ? 'Deactive Service' : 'Activate Service'}</button>\r\n          </div>\r\n          <div className=\"mb-1\">\r\n            <button onClick={() => handleClear()} type=\"button\" className=\"btn btn-secondary btn-small fw-bold\"><i className=\"fa-solid fa-xmark\"></i> Clear fields</button>\r\n          </div>\r\n          <button onClick={handleSubmit} type=\"submit\" className=\"btn selection-button w-100 fs-5 fw-bold\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n}\r\n","import React from 'react';\r\nimport { getItem, storageKeys } from '../../../storageManager';\r\nimport { AppAlert, Service } from '../../../types';\r\n\r\ninterface ManageServicesListComponentProps {\r\n  services: Service[];\r\n  setService: (service: Service) => void;\r\n  setAlert: (alert: AppAlert) => void;\r\n}\r\n\r\nexport function ManageServicesListComponent(props: ManageServicesListComponentProps) {\r\n  const handleOnClick = (id: Number) => {\r\n    const services = getItem<Service[]>(storageKeys.SERVICES) ?? [];\r\n    const foundService = services.find(s => s.id === id);\r\n    props.setService(foundService as Service);\r\n    props.setAlert({ show: false, message: '' })\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {props.services.map((service, i) => (\r\n        <div className=\"col-md-3\" key={service.id}>\r\n          <div className=\"card m-1\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title mx-1\">{service.name}</h5>\r\n              <h6 className=\"card-subtitle mb-2 mx-1 text-muted\">Price: {`$${service.price}`}</h6>\r\n              <h6 className=\"card-subtitle mb-2 mx-1 text-muted\">Status: {service.active ? 'Active' : 'Not Active'}</h6>\r\n              <button onClick={() => handleOnClick(service.id)} type=\"button\" className=\"btn btn-sm navi-background-color mx-1 w-100\">Update</button>\r\n            </div>\r\n          </div>\r\n        </div>))}\r\n    </div>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { getItem, setItem, storageKeys } from '../../../storageManager';\r\nimport { AppAlert, Service } from '../../../types';\r\nimport { AddServicesComponent } from './AddServicesComponent';\r\nimport { ManageServicesListComponent } from './ManageServicesListComponent';\r\n\r\nexport function ServicesComponent(props: any) {\r\n  const [services, setServices] = useState(() => getServices());\r\n  const [service, setService] = useState<Service>({ id: 0, name: '', price: 0, active: false });\r\n  const defaultAlert = { show: false, message: '', color: '' };\r\n  const [alert, setAlert] = useState<AppAlert>(defaultAlert);\r\n\r\n  const formatPrice = (price: string | number) => parseFloat(parseFloat(price as string).toFixed(2));\r\n\r\n  const addNewService = (name: string, price: string | number, active: boolean) => {\r\n    const services = getItem<Service[]>(storageKeys.SERVICES) ?? [];\r\n\r\n    if (services.some(s => s.name.toLowerCase() === name.toLowerCase())) {\r\n      return setAlert({ show: true, message: 'A service with the same name already exist.', color: 'text-danger' });\r\n    }\r\n\r\n    const parsedPrice = formatPrice(price);\r\n    const updatedServices = [{ id: Date.now(), name, price: parsedPrice, active }, ...services];\r\n    setItem(storageKeys.SERVICES, updatedServices);\r\n    setAlert({ show: true, message: `Service with name: ${name} and price ${parsedPrice} has been successfully added.`, color: 'text-success' });\r\n    setService({ id: 0, name: '', price: 0, active: false });\r\n    setServices(updatedServices);\r\n  }\r\n\r\n  const updateService = (name: string, price: string | number, active: boolean) => {\r\n    const services = getItem<Service[]>(storageKeys.SERVICES) ?? [];\r\n\r\n    const updatedServices = services.map(eachService => {\r\n      if (eachService.id === service.id) {\r\n        return { ...eachService, name, price, active };\r\n      }\r\n      return eachService;\r\n    });\r\n\r\n    const parsedPrice = formatPrice(price);\r\n    setItem(storageKeys.SERVICES, updatedServices);\r\n    setAlert({ show: true, message: `Service with name: ${name} and price ${parsedPrice} has been successfully updated.`, color: 'text-success' });\r\n    setService({ id: 0, name: '', price: 0, active: false });\r\n    setServices(updatedServices);\r\n  }\r\n\r\n  const handleOnChange = (service: Service) => {\r\n    setService(service)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const { name, price, active } = service;\r\n\r\n    if (!name || !price) {\r\n      return setAlert({ show: true, message: `Name and price are required for service.`, color: 'text-danger' });;\r\n    }\r\n\r\n    if (service.id) {\r\n      return updateService(name, price, active);\r\n    }\r\n\r\n    addNewService(name, price, active);\r\n  }\r\n\r\n  function getServices() {\r\n    return getItem<Service[]>(storageKeys.SERVICES) ?? [];\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"fs-4 navi-background-color p-2 mb-2\">Create New Service</div>\r\n      <AddServicesComponent\r\n        setServices={setServices}\r\n        handleOnChange={handleOnChange}\r\n        handleSubmit={handleSubmit}\r\n        alert={alert}\r\n        service={service}\r\n      />\r\n      <div className=\"fs-4 navi-background-color p-2 my-2\"><i className=\"fa-solid fa-scissors\"></i> Services</div>\r\n      <ManageServicesListComponent\r\n        services={services}\r\n        setService={setService}\r\n        setAlert={setAlert}\r\n      />\r\n    </div>);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getItem, setItem, storageKeys } from './storageManager';\r\nimport './App.css';\r\nimport { CheckInListComponent } from './areas/customerCheckIn/CheckInListComponent';\r\nimport { CheckInComponent } from './areas/customerCheckIn/CheckInComponent';\r\nimport { Barber, CheckInInfo, DailyCheckIn, ServiceStatus, View } from './types';\r\nimport { ManageAuthComponent } from './areas/manageCheckIn/ManageAuthComponent';\r\nimport { ManageComponent } from './areas/manageCheckIn/ManageComponent';\r\nimport { getTodayDate } from './utils/dateUtils';\r\n\r\nfunction App() {\r\n  const [isCheckingIn, setIsCheckingIn] = useState(false);\r\n  const [checkInInfos, setDailyCheckIns] = useState<CheckInInfo[]>(() => update());\r\n  const [view, setView] = useState<View>(updateView());\r\n  const [isModelOpen, setIsModalOpen] = useState(false);\r\n\r\n  function update() {\r\n    const checkIns = getItem<DailyCheckIn[]>(storageKeys.DAILY_CHECKINS) ?? [];\r\n    return checkIns\r\n      .find(c => c.date === getTodayDate())?.checkInInfos\r\n      .filter(c => c.status === ServiceStatus.PENDING) ?? [];\r\n  }\r\n\r\n  function updateView() {\r\n    return getItem<View>(storageKeys.VIEW) ?? View.CHECK_IN;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDailyCheckIns(update());\r\n  }, [isCheckingIn, view]);\r\n\r\n  const handleViewChange = (view: View) => {\r\n    setItem(storageKeys.VIEW, view);\r\n    setView(updateView());\r\n  }\r\n\r\n  let checkInButtonLabel = 'Check-in';\r\n  let checkInButtonIcon = <i className=\"fa-solid fa-calendar-check\"></i>;\r\n\r\n  if (isCheckingIn) {\r\n    checkInButtonLabel = 'Cancel Check-in';\r\n    checkInButtonIcon = <i className=\"fa-solid fa-solid fa-x\"></i>;\r\n  }\r\n\r\n  const authorize = () => {\r\n    handleViewChange(View.MANAGE);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const initializeAuth = () => {\r\n    if (getItem<Barber[]>(storageKeys.BARBERS)) {\r\n      setIsModalOpen(true);\r\n    } else {\r\n      authorize();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App mb-5\">\r\n      <nav className=\"navbar navbar-dark navi-background-color nav-border-bottom\">\r\n        <div className=\"container-fluid\">\r\n          <span className=\"navbar-brand mb-0 fs-4 fw-bold border rounded-3 px-2 border-3 text-danger\">Hero's Barbershop</span>\r\n          {view === View.CHECK_IN ?\r\n            <span className=\"navbar-brand mb-0 h1 btn mr-auto border-bottom border-3\" onClick={initializeAuth}>{<i className=\"fa-solid fa-pen-to-square\"></i>} Manage</span> :\r\n            <span className=\"navbar-brand mb-0 h1 btn mr-auto border-bottom border-3\" onClick={() => handleViewChange(View.CHECK_IN)}>{<i className=\"fa-solid fa-calendar-check\"></i>} Check-in</span>\r\n          }\r\n        </div>\r\n      </nav>\r\n      {view === View.CHECK_IN && (\r\n        <>\r\n          <header className=\"App-header header-border-bottom mb-3\">\r\n            {<button onClick={() => setIsCheckingIn(!isCheckingIn)} className=\"btn btn-lg navi-background-color text-light py-3 px-5 fs-1 fw-bold fade-in\">{checkInButtonIcon} {checkInButtonLabel}</button>}\r\n          </header>\r\n          <div>\r\n            {isCheckingIn && <CheckInComponent setIsCheckingIn={setIsCheckingIn} />}\r\n            {!isCheckingIn && <CheckInListComponent checkInInfos={checkInInfos} />}\r\n          </div>\r\n        </>)\r\n      }\r\n      {view === View.MANAGE && <ManageComponent />}\r\n      <ManageAuthComponent isOpen={isModelOpen} setIsModalOpen={setIsModalOpen} authorize={authorize} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}